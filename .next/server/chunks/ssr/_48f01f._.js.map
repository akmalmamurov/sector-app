{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/context/store.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { createJSONStorage, persist } from \"zustand/middleware\";\nimport { ProductData } from \"@/types\";\n\nexport interface StoreItem extends ProductData {\n  quantity?: number;\n}\n\ninterface StoreState {\n  auth: boolean;\n  contact: string;\n  favorites: StoreItem[];\n  cart: StoreItem[];\n  compares: StoreItem[];\n  selected: StoreItem[];\n  rowCol: boolean;\n  user: string | null;\n  setUser: (user: string | null) => void;\n  setAuth: (value: boolean) => void;\n  setContact: (info: string) => void;\n  toggleFavorites: (product: ProductData) => void;\n  addToCart: (product: ProductData) => void;\n  selectedCardsList: (products: ProductData[]) => void;\n  toggleCompare: (product: ProductData) => void;\n  setQuantity: (id: string, quantity: number) => void;\n  deleteFavorites: (id: string) => void;\n  deleteCart: (id: string) => void;\n  removeFromCompares: (id: string) => void;\n  resetCart: () => void;\n  resetFavorites: () => void;\n  resetCompares: () => void;\n  getTotalPrice: () => number;\n  getGroupedItems: () => StoreItem[];\n  logOut: () => void;\n  clearDataAfterTimeout: () => void;\n  toggleRowCol: (value?: boolean) => void;\n}\n\nconst useStore = create<StoreState>()(\n  persist(\n    (set, get) => ({\n      auth: false,\n      contact: \"\",\n      favorites: [],\n      cart: [],\n      rowCol: false,\n      compares: [],\n      selected: [],\n      user: null,\n      setUser: (user) => set({ user }),\n      setAuth: (value) => set({ auth: value }),\n      toggleRowCol: (value?: boolean) =>\n        set((state) => ({\n          rowCol: typeof value === \"boolean\" ? value : !state.rowCol,\n        })),\n      \n      selectedCardsList: (products) => {\n        set(() => ({\n          selected: products,\n        }));\n      },\n\n      setContact: (info) => set({ contact: info }),\n      toggleFavorites: (product) => {\n        set((state) => {\n          const isFavorite = state.favorites.some(\n            (item) => item.id === product.id\n          );\n          return isFavorite\n            ? {\n                favorites: state.favorites.filter(\n                  (item) => item.id !== product.id\n                ),\n              }\n            : { favorites: [...state.favorites, product] };\n        });\n      },\n      resetFavorites: () => set({ favorites: [] }),\n      addToCart: (product: ProductData) =>\n        set((state) => {\n          const existingProduct = state.cart.find(\n            (item) => item.id === product.id\n          );\n          if (existingProduct) {\n            return {\n              cart: state.cart.map((item) =>\n                item.id === product.id\n                  ? {\n                      ...item,\n                      quantity: (item.quantity || 1) + (product.quantity || 1),\n                    }\n                  : item\n              ),\n            };\n          }\n          return {\n            cart: [\n              ...state.cart,\n              { ...product, quantity: product.quantity || 1 },\n            ],\n          };\n        }),\n      setQuantity: (id, quantity) => {\n        set((state) => ({\n          cart: state.cart.map((item) =>\n            item.id === id ? { ...item, quantity: Math.max(quantity, 1) } : item\n          ),\n        }));\n      },\n      toggleCompare: (product) => {\n        set((state) => {\n          const isCompare = state.compares.some(\n            (item) => item.id === product.id\n          );\n          return isCompare\n            ? {\n                compares: state.compares.filter(\n                  (item) => item.id !== product.id\n                ),\n              }\n            : { compares: [...state.compares, product] };\n        });\n      },\n      deleteFavorites: (id) => {\n        set((state) => ({\n          favorites: state.favorites.filter((item) => item.id !== id),\n        }));\n      },\n      deleteCart: (id) => {\n        set((state) => ({\n          cart: state.cart.filter((item) => item.id !== id),\n        }));\n      },\n      resetCart: () => set({ cart: [] }),\n      removeFromCompares: (id) => {\n        set((state) => ({\n          compares: state.compares.filter((item) => item.id !== id),\n        }));\n      },\n      resetCompares: () => set({ compares: [] }),\n      getTotalPrice: () => {\n        return get().cart.reduce(\n          (total, item) => total + (item.price ?? 0) * (item.quantity ?? 1),\n          0\n        );\n      },\n      getGroupedItems: () => get().cart,\n      logOut: () => {\n        set({\n          auth: false,\n          contact: \"\",\n        });\n        localStorage.removeItem(\"sector-token\");\n      },\n      clearDataAfterTimeout: () => {\n        if (!get().auth) {\n          setTimeout(() => {\n            get().resetCart();\n            get().resetFavorites();\n            get().resetCompares();\n          }, 604800000);\n        }\n      },\n    }),\n    {\n      name: \"sector-app\",\n      storage: createJSONStorage(() => localStorage),\n    }\n  )\n);\n\nexport default useStore;\n\nexport const hydrateStore = () => {\n  useStore.persist.rehydrate();\n\n  if (typeof window !== \"undefined\" && localStorage.getItem(\"sector-token\")) {\n    useStore.setState({ auth: true });\n  }\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/app/cart/page.tsx"],"sourcesContent":["import { MyCart } from \"@/components/cart-step\";\r\nimport { Metadata } from \"next\";\r\nexport const metadata: Metadata = {\r\n  title: \"Корзина | Sector App\",\r\n  description: \"Системная интеграция от Sector\",\r\n};\r\n\"use client\";\r\nimport useStore from \"@/context/store\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { PageLoader } from \"../loader\";\r\nimport MyCartLeft from \"./MyCartLeft\";\r\nimport OrderCart from \"../order-cart/OrderCart\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { OrderRequest } from \"@/types\";\r\nimport { showError } from \"../toast/Toast\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport const MyCart = () => {\r\n  const [city, setCity] = useState<string>(\"\");\r\n  const [isClient, setIsClient] = useState(false);\r\n  const { cart, setQuantity, deleteCart, resetCart,auth,clearDataAfterTimeout } = useStore();\r\n  const [selectedItems, setSelectedItems] = useState<string[]>( cart.map((item) => item.id) );\r\n   const { handleSubmit,control, setValue, watch, formState: { errors }, } = useForm<OrderRequest>();\r\n  const [prevCartLength, setPrevCartLength] = useState(cart.length);\r\n\r\n  const isAllChecked = cart.length > 0 && selectedItems.length === cart.length;\r\n  const selectedCards = cart.filter((item) => selectedItems.includes(item.id));\r\n  const authErrorShown = useRef(false);\r\nconst router = useRouter();\r\n  useEffect(() => {\r\n    if (!auth) {\r\n      clearDataAfterTimeout();\r\n    }\r\n  }, [auth, clearDataAfterTimeout]);\r\n\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (auth === false && !authErrorShown.current) {\r\n        showError(\"Вы не авторизованы, рекомендуем авторизоваться\");\r\n        authErrorShown.current = true;\r\n      }\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [auth]);\r\n  useEffect(() => {\r\n    if (cart.length !== prevCartLength) {\r\n      setSelectedItems(cart.map((item) => item.id));\r\n      setPrevCartLength(cart.length);\r\n    }\r\n  }, [cart, prevCartLength]);\r\n  useEffect(() => setIsClient(true), []);\r\n  if (!isClient) {\r\n    return <PageLoader />;\r\n  }\r\n  const onSubmit = (data: OrderRequest) => {\r\n    console.log(data);\r\n      router.push(\"/cart/contacts\");\r\n    \r\n  };\r\n  const toggleAllItems = () => {\r\n    if (isAllChecked) {\r\n      setSelectedItems([]);\r\n    } else {\r\n      setSelectedItems(cart.map((item) => item.id));\r\n    }\r\n  };\r\n\r\n  const toggleSingleItem = (id: string) => {\r\n    setSelectedItems((prev) =>\r\n      prev.includes(id) ? prev.filter((itemId) => itemId !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const props = {\r\n    toggleSingleItem,\r\n    toggleAllItems,\r\n    isAllChecked,\r\n    setQuantity,\r\n    city,\r\n    setCity,\r\n    cart,\r\n    selectedItems,\r\n    deleteCart,\r\n    resetCart,\r\n    errors,\r\n    control,\r\n    setValue,\r\n    watch,\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"grid grid-cols-4 gap-[23px]\">\r\n        <div className=\"col-span-3\">\r\n          <MyCartLeft {...props} />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <OrderCart selectedCards={selectedCards} />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}