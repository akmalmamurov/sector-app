{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/components/bread-crumb/HomeCrumb.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ChevronRight } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { HomeIcon } from \"@/assets/icons\";\r\n\r\ninterface BreadcrumbItem {\r\n  name: string | React.ReactNode;\r\n  href?: string;\r\n}\r\n\r\ninterface BreadcrumbProps {\r\n  paths: BreadcrumbItem[];\r\n}\r\n\r\nexport const HomeCrumb = ({ paths }: BreadcrumbProps) => {\r\n  return (\r\n    <div className=\"flex items-center pl-2 sm:pl-1 gap-[15px]  text-gray-600 h-[58px]\">\r\n      {/* Home Link */}\r\n      <Link\r\n        href=\"/\"\r\n        className=\"flex items-center gap-1 text-gray-500 hover:text-gray-700\"\r\n      >\r\n        <HomeIcon />\r\n      </Link>\r\n\r\n      {paths.map((item, index) => (\r\n        <div key={index} className=\"flex items-center gap-[15px]\">\r\n          <ChevronRight className=\"text-gray-400\" size={14} />\r\n          {item.href ? (\r\n            <Link\r\n              href={item.href}\r\n              className={` font-normal text-xs hover:underline duration-200 ease-in-out ${\r\n                index === paths.length - 2 ? \"text-weekColor\" : \"text-celBlue\"\r\n              }`}\r\n            >\r\n              {item.name}\r\n            </Link>\r\n          ) : (\r\n            <p className=\"text-celBlue font-normal text-xs cursor-text\">\r\n              {item.name}\r\n            </p>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeCrumb;\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;AAFA;AAFA;;;;;AAeO,MAAM,YAAY,CAAC,EAAE,KAAK,EAAmB;IAClD,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,4JAAA,CAAA,UAAI;gBACH,MAAK;gBACL,WAAU;0BAEV,cAAA,8OAAC,mIAAA,CAAA,WAAQ;;;;;;;;;;YAGV,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;oBAAgB,WAAU;;sCACzB,8OAAC,sNAAA,CAAA,eAAY;4BAAC,WAAU;4BAAgB,MAAM;;;;;;wBAC7C,KAAK,IAAI,iBACR,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAC,8DAA8D,EACxE,UAAU,MAAM,MAAM,GAAG,IAAI,mBAAmB,gBAChD;sCAED,KAAK,IAAI;;;;;iDAGZ,8OAAC;4BAAE,WAAU;sCACV,KAAK,IAAI;;;;;;;mBAbN;;;;;;;;;;;AAoBlB;uCAEe"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/components/bread-crumb/CategoryCrumb.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { CrumbChevronDownIcon } from \"@/assets/icons\";\r\nimport { CatalogData } from \"@/types\";\r\nimport { ChevronRight, ChevronRightIcon } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nexport const CategoryCrumb = ({\r\n  item,\r\n  isLast,\r\n}: {\r\n  item: { name: string; href?: string; catalogItem?: CatalogData };\r\n  isLast: boolean;\r\n}) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [dropdownStyle, setDropdownStyle] = useState({ top: 0, left: 0 });\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isHovered && containerRef.current) {\r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      setDropdownStyle({ top: rect.bottom, left: rect.left });\r\n    }\r\n  }, [isHovered]);\r\n\r\n  const childSubcatalogs = item.catalogItem?.subcatalogs || [];\r\n  const childCategories = item.catalogItem?.categories || [];\r\n  const showDropdown =\r\n    item.href !== undefined &&\r\n    item.catalogItem &&\r\n    (childSubcatalogs.length > 0 || childCategories.length > 0);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className=\"flex items-center gap-[15px] relative\"\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <div className=\"flex items-center\">\r\n        {showDropdown && <CrumbChevronDownIcon className=\"mr-2\" />}\r\n        {item.href ? (\r\n          <Link\r\n            href={item.href}\r\n            className={`font-normal text-xs ${\r\n              !isLast ? \"text-weekColor hover:underline\" : \"text-celBlue\"\r\n            }`}\r\n          >\r\n            {item.name}\r\n          </Link>\r\n        ) : (\r\n          <span className=\"text-celBlue font-normal text-xs cursor-text\">\r\n            {item.name}\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {!isLast && <ChevronRight className=\"text-weekColor\" size={14} />}\r\n\r\n      {showDropdown &&\r\n        isHovered &&\r\n        createPortal(\r\n          <div\r\n            className=\"bg-white border shadow-md p-2 w-fit \"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: dropdownStyle.top,\r\n              left: dropdownStyle.left,\r\n              zIndex: 10,\r\n            }}\r\n          >\r\n            {childSubcatalogs.length > 0 && (\r\n              <ul>\r\n                {childSubcatalogs.map((sub) => (\r\n                  <li key={sub.id}>\r\n                    <Link\r\n                      href={`/catalog/${sub.slug}`}\r\n                      className=\"text-xs text-weekColor hover:underline flex\"\r\n                    >\r\n                            <ChevronRightIcon className=\"text-weekColor\" size={14} />\r\n                      {sub.title}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n            {childCategories.length > 0 && (\r\n              <ul>\r\n                {childCategories.map((cat) => (\r\n                  <li key={cat.id}>\r\n                    <Link\r\n                      href={`/catalog/${item.catalogItem?.slug}/${cat.slug}`}\r\n                      className=\"text-xs text-weekColor hover:underline flex\"\r\n                    >\r\n                      <ChevronRightIcon className=\"text-weekColor\" size={14} />\r\n                      {cat.title}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>,\r\n          document.body\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AACA;AALA;AAEA;AAAA;AAJA;;;;;;;AASO,MAAM,gBAAgB,CAAC,EAC5B,IAAI,EACJ,MAAM,EAIP;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,KAAK;QAAG,MAAM;IAAE;IACrE,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa,aAAa,OAAO,EAAE;YACrC,MAAM,OAAO,aAAa,OAAO,CAAC,qBAAqB;YACvD,iBAAiB;gBAAE,KAAK,KAAK,MAAM;gBAAE,MAAM,KAAK,IAAI;YAAC;QACvD;IACF,GAAG;QAAC;KAAU;IAEd,MAAM,mBAAmB,KAAK,WAAW,EAAE,eAAe,EAAE;IAC5D,MAAM,kBAAkB,KAAK,WAAW,EAAE,cAAc,EAAE;IAC1D,MAAM,eACJ,KAAK,IAAI,KAAK,aACd,KAAK,WAAW,IAChB,CAAC,iBAAiB,MAAM,GAAG,KAAK,gBAAgB,MAAM,GAAG,CAAC;IAE5D,qBACE,8OAAC;QACC,KAAK;QACL,WAAU;QACV,cAAc,IAAM,aAAa;QACjC,cAAc,IAAM,aAAa;;0BAEjC,8OAAC;gBAAI,WAAU;;oBACZ,8BAAgB,8OAAC,+IAAA,CAAA,uBAAoB;wBAAC,WAAU;;;;;;oBAChD,KAAK,IAAI,iBACR,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAM,KAAK,IAAI;wBACf,WAAW,CAAC,oBAAoB,EAC9B,CAAC,SAAS,mCAAmC,gBAC7C;kCAED,KAAK,IAAI;;;;;6CAGZ,8OAAC;wBAAK,WAAU;kCACb,KAAK,IAAI;;;;;;;;;;;;YAKf,CAAC,wBAAU,8OAAC,sNAAA,CAAA,eAAY;gBAAC,WAAU;gBAAiB,MAAM;;;;;;YAE1D,gBACC,2BACA,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,gBACT,8OAAC;gBACC,WAAU;gBACV,OAAO;oBACL,UAAU;oBACV,KAAK,cAAc,GAAG;oBACtB,MAAM,cAAc,IAAI;oBACxB,QAAQ;gBACV;;oBAEC,iBAAiB,MAAM,GAAG,mBACzB,8OAAC;kCACE,iBAAiB,GAAG,CAAC,CAAC,oBACrB,8OAAC;0CACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,MAAM,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE;oCAC5B,WAAU;;sDAEJ,8OAAC,0NAAA,CAAA,mBAAgB;4CAAC,WAAU;4CAAiB,MAAM;;;;;;wCACxD,IAAI,KAAK;;;;;;;+BANL,IAAI,EAAE;;;;;;;;;;oBAYpB,gBAAgB,MAAM,GAAG,mBACxB,8OAAC;kCACE,gBAAgB,GAAG,CAAC,CAAC,oBACpB,8OAAC;0CACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,MAAM,CAAC,SAAS,EAAE,KAAK,WAAW,EAAE,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE;oCACtD,WAAU;;sDAEV,8OAAC,0NAAA,CAAA,mBAAgB;4CAAC,WAAU;4CAAiB,MAAM;;;;;;wCAClD,IAAI,KAAK;;;;;;;+BANL,IAAI,EAAE;;;;;;;;;;;;;;;sBAavB,SAAS,IAAI;;;;;;;AAIvB"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/components/div/InfoHeader.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\r\n\r\ninterface InfoHeaderProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\nexport const InfoHeader = ({ children, className }: InfoHeaderProps) => {\r\n  return (\r\n    <div className={cn(\"pb-[25px] px-6  border-b border-superSilver\", className)}>{children}</div>\r\n  );\r\n};\r\n\r\nexport default InfoHeader;\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAMO,MAAM,aAAa,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAmB;IACjE,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,+CAA+C;kBAAa;;;;;;AAEnF;uCAEe"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/components/title/Title.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\nexport const Title = ({ children, className }: Props) => {\r\n  return <h1 className={cn(\"font-normal lgl:font-semibold text-2xl lgl:text-[32px] leading-[31px] text-textColor w-fit\", className)}>{children}</h1>;\r\n};\r\n\r\nexport default Title;\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAMO,MAAM,QAAQ,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAS;IAClD,qBAAO,8OAAC;QAAG,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8FAA8F;kBAAa;;;;;;AACtI;uCAEe"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/components/title/InfoTitle.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport const InfoTitle = ({ children, className }: Props) => {\r\n  return (\r\n    <h3\r\n      className={cn(\r\n        \"relative font-arial font-normal text-[29px] text-textColor w-fit\",\r\n        \"before:block before:w-full before:h-[2px] before:bg-cerulean before:absolute before:bottom-[-26px]\",\r\n        className\r\n      )}\r\n    >\r\n      {children}\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default InfoTitle;\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAOO,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAS;IACtD,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oEACA,sGACA;kBAGD;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/sector-app/src/components/brand-list/BrandList.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { BrandData } from \"@/types\";\r\nimport { InfoHeader } from \"../div\";\r\nimport { InfoTitle } from \"../title\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport {\r\n  getLatinLettersForDisplay,\r\n  getCyrillicLettersForDisplay,\r\n} from \"@/utils\";\r\n\r\ninterface BrandsClientProps {\r\n  groupedBrands: Record<string, BrandData[]>;\r\n  latinLetters: string[];\r\n  cyrillicLetters: string[];\r\n}\r\n\r\nexport default function BrandList(props: BrandsClientProps) {\r\n  const { groupedBrands, latinLetters, cyrillicLetters } = props;\r\n  const [selectedLetters, setSelectedLetters] = useState<string[]>([]);\r\n\r\n\r\n  const displayLatinLetters = getLatinLettersForDisplay(\r\n    groupedBrands,\r\n    latinLetters,\r\n    cyrillicLetters\r\n  );\r\n  const displayCyrillicLetters = getCyrillicLettersForDisplay(\r\n    groupedBrands,\r\n    cyrillicLetters\r\n  );\r\n\r\n  const toggleLetter = (letter: string) => {\r\n    if (selectedLetters.includes(letter)) {\r\n      setSelectedLetters(selectedLetters.filter((l) => l !== letter));\r\n    } else {\r\n      setSelectedLetters([...selectedLetters, letter]);\r\n    }\r\n  };\r\n\r\n  const isLetterDisabled = (letter: string) => {\r\n    return !groupedBrands[letter] || groupedBrands[letter].length === 0;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid grid-cols-2 gap-20 px-6 pb-6\">\r\n        <div>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {displayLatinLetters.map((letter) => {\r\n              const isActive = selectedLetters.includes(letter);\r\n              const disabled = isLetterDisabled(letter);\r\n              return (\r\n                <button\r\n                  key={letter}\r\n                  onClick={() => toggleLetter(letter)}\r\n                  disabled={disabled}\r\n                  className={`w-[60px] h-[55px] flex justify-center items-center text-textColor border border-superSilver hover:bg-cerulean hover:text-white duration-150 ease-in-out ${\r\n                    isActive ? \"bg-cerulean text-white\" : \"bg-white\"\r\n                  } ${disabled ? \"opacity-50 cursor-not-allowed hover:bg-transparent hover:text-textColor\" : \"\"}`}\r\n                >\r\n                  {letter}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {/* Kirill belgilar */}\r\n        <div>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {displayCyrillicLetters.map((letter) => {\r\n              const isActive = selectedLetters.includes(letter);\r\n              const disabled = isLetterDisabled(letter);\r\n              return (\r\n                <button\r\n                  key={letter}\r\n                  onClick={() => toggleLetter(letter)}\r\n                  disabled={disabled}\r\n                  className={`w-[60px] h-[55px] flex justify-center items-center text-textColor border border-superSilver hover:bg-cerulean hover:text-white duration-150 ease-in-out ${\r\n                    isActive ? \"bg-cerulean text-white\" : \"bg-white\"\r\n                  } ${disabled ? \"opacity-50 cursor-not-allowed hover:bg-transparent hover:text-textColor\" : \"\"}`}\r\n                >\r\n                  {letter}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-[39px]\">\r\n        <InfoHeader>\r\n          <div className=\"flex justify-center\">\r\n            <InfoTitle>Бренды по алфавиту</InfoTitle>\r\n          </div>\r\n        </InfoHeader>\r\n        {Object.keys(groupedBrands).length > 0 ? (\r\n          Object.keys(groupedBrands)\r\n            .filter(\r\n              (letter) =>\r\n                selectedLetters.length === 0 || selectedLetters.includes(letter)\r\n            )\r\n            .sort((a, b) => a.localeCompare(b, \"ru\"))\r\n            .map((letter: string) => {\r\n              const brands = groupedBrands[letter] || [];\r\n              return (\r\n                <div key={letter} className=\"mb-[31px] p-6\">\r\n                  <h2 className=\"text-textColor text-[26px] font-normal mb-[31px]\">\r\n                    {letter}\r\n                  </h2>\r\n                  <div className=\"grid grid-cols-6 gap-3\">\r\n                    {brands.map((brand) => (\r\n                      <Link\r\n                        href={`/brands/${brand.slug}`}\r\n                        key={brand.id}\r\n                        className=\"border border-superSilver flex flex-col justify-center items-center h-[121px] px-10 group gap-[15px]\"\r\n                      >\r\n                        {brand.path ? (\r\n                          <Image\r\n                            src={`${process.env.NEXT_PUBLIC_API_URL}/${brand.path}`}\r\n                            alt={brand.slug}\r\n                            width={150}\r\n                            height={60}\r\n                            className=\"w-[120px] h-[50px] object-contain\"\r\n                          />\r\n                        ) : (\r\n                          <span className=\"text-black text-base font-semibold group-hover:underline\">\r\n                            {brand.title}\r\n                          </span>\r\n                        )}\r\n                        <span className=\"text-black text-sm font-normal group-hover:underline text-center\">\r\n                          {brand.title}\r\n                        </span>\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n        ) : (\r\n          <p className=\"text-gray-500\">\r\n            {selectedLetters.length > 0\r\n              ? \"Для выбранных букв брендов нет\"\r\n              : \"Бренды отсутствуют\"}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}